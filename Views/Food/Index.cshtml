@model List<Food>
@{
    ViewData["Title"] = "Alimentos";
    var user = SessionHelper.GetObjectFromSession<User>(Context.Session, SessionKeys.USER_KEY.ToString());
}

<div class="row">
    @if(Model.Count == 0)
    {
        <div class="card">
            <div class="card-body d-flex justify-content-between align-items-center">
                Ainda não há nenhuma doação cadastrada.
                <a
                    asp-controller="Food"
                    asp-action="Create"
                    class="btn btn-link"
                >
                    Que tal ser o primeiro?
                </a>
            </div>
        </div>
    }
    @foreach(var food in Model)
    {
        var buttonText = user != null && user.UserId == food.UserId.GetValueOrDefault() ? "Detalhes" : "Reservar";
        var buttonSeverity = user != null && user.UserId != food.UserId.GetValueOrDefault() ? "primary" : "outline-secondary";

        <div class="col-lg-4 col-md-6 mb-4">
            <div class="card h-100">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        @food.Name
                    </div>
                </div>
                <div class="position-relative">
                    <span
                        condition="@food.IsPerishable.GetValueOrDefault(false)"
                        class="badge bg-dark text-white position-absolute top-0 end-0 mx-2 my-2"
                    >
                        Perecível
                    </span>
                    <a href="#" class="">
                        <img
                            class="card-img-top" 
                            alt="Alimento: @food.Name" 
                            src='@(food.UrlImage != null ? food.UrlImage : "https://dummyimage.com/700x350/dee2e6/6c757d.jpg")'
                        />
                    </a>
                </div>
                <div class="card-body">
                    <small class="text-muted">
                        Vecimento: @food.ExpireAt.ToShortDateString()
                    </small>
                    <p class="card-text text-truncate-line">@food.Description</p>
                </div>
                <div class="card-footer d-flex justify-content-between align-items-center">
                    <small>@(food.Type.GetAttribute<DisplayAttribute>().Name)</small>
                    @if(user == null)
                    {
                        <button
                            type="button"
                            class='btn btn-sm btn-@buttonSeverity make-requisition'
                            data-bs-toggle="modal"
                            data-bs-target="#requisitionFoodModal"
                        >
                            @buttonText
                        </button>
                    }
                    else
                    {
                        <button
                            type="button"
                            class='btn btn-sm btn-@buttonSeverity make-requisition'
                            data-bs-toggle="modal"
                            data-bs-target="#requisitionFoodModal"
                            data-food-id="@food.FoodId"
                            data-food-name="@food.Name"
                            data-food-has-manufactured-date="@(food.ManufacturedAt.HasValue.ToString().ToLower())"
                            data-food-manufactured-at="@food.ManufacturedAt?.ToShortDateString()"
                            data-food-expire-at="@food.ExpireAt.ToShortDateString()"
                            data-food-is-perishable="@food.IsPerishable.GetValueOrDefault(false).ToString().ToLower()"
                            data-food-type="@(food.Type.GetAttribute<DisplayAttribute>().Name)"
                            data-food-description="@food.Description"
                            data-donor-name="@food.User?.Name"
                            data-donor-contact="@food.User?.Phone"
                            data-donor-location="@food.User?.Address?.City"
                            data-modal-title='@(user != null && user.UserId == food.UserId.GetValueOrDefault() ? "Informações detalhadas" : "Solicitar reserva do alimento")'
                            data-modal-donor-text='@(user != null && user.UserId == food.UserId.GetValueOrDefault() ? "Suas informações" : "Informações sobre o doador")'
                            data-modal-close-text='@(user != null && user.UserId == food.UserId.GetValueOrDefault() ? "Fechar" : "Cancelar")'
                            data-modal-is-minimal='@((user != null && user.UserId == food.UserId.GetValueOrDefault()).ToString().ToLower())'
                        >
                            @buttonText
                        </button>
                    }
                </div>
            </div>
        </div>
    }
</div>

<partial name='@(user != null ? "_RequisitionModal" : "_UserNotLoggedModal")' />

@if(user != null)
{
    @section Scripts {
        <script src="~/js/dist/food.reservation.prod.js" asp-append-version="true"></script>
    }
}